Creating a Database :
sudo podman run --name mysql-basic -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 -d rhscl/mysql-57-rhel7:5.7-31.4

sudo podman ps

sudo podman exec -it mysql-basic /bin/bash
mysql -uroot
show databases;
use items;
CREATE TABLE projects (id int(11) NOT NULL, name varchar(255) DEFAULT NULL, code varchar(255) DEFAULT NULL, PRIMARY KEY (id));
show tables;
insert into projects (id, name, code) values (1,'Devops','DO080');
select * from projects
exit

Building a Container :
pwd (create a workspace & target to it) - /home/student/do180/labs/dockerfile-create

vi Dockerfile (enter below code into it)
FROM rhel7:7.5
MAINTAINER Gopal <Gopal@redhat.com>
LABEL description="A custom Apache image"
ADD training.repo /etc/yum.repos.d/training.repo
RUN yum install -y httpd && \
    yum clean all
RUN echo "Hello from Dockerfile"> /usr/share/httpd/noindex/index.html
EXPOSE 80
ENTRYPOINT ["httpd","-D","FOREGROUND"]

sudo podman build -t do080/apache .
sudo podman images
sudo podman run --name lab-apache -d -p 10080:80 do080/apache
sudo podman ps
curl 127.0.0.1:10080
displays "Hello from Dockerfile"
exit

Creating Kubernetes Resourse :
oc status
oc new-project mysql-openshift
oc new-app --docker-image=registry.lab.example.com/rhscl/mysql-57-rhel7:latest --name=mysql-openshift -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=testdb -e MYSQL_ROOT_PASSWORD=r00tpa55 --insecure-registry=true
oc get pods
oc describe pod mysql-openshift-1-jg6bk
oc get pods -w
oc get svc
oc expose service mysql-openshift
oc get route
oc get pods
oc port-forward mysql-openshift-1-jg6bk 3306:3306
(open on new tab) mysql -uuser1 -pmypa55 --protocol tcp -h localhost
show databases;
exit

Exposing a Service as a Route :
oc new-project route
oc new-app php:5.6~http:services.lab.example.com/php-helloworld
oc get pods -w
oc get pods
oc get svc
oc expose svc/php-helloworld
oc get route
oc describe route php-helloworld
curl php-helloworld-route.apps.cluster.lab.example.com
displays "Hello , World ! php version is 5.6.25"
oc delete route/php-helloworld
displays "php-helloworld" deleted
oc expose svc/php-helloworld --name=xyz
oc get route
curl xyz-route.apps.cluster.lab.example.com
displays "Hello , World ! php version is 5.6.25"
exit


Creating a containerized app with Source2Image:
oc status
oc new-app -i php:5.6 --name=php-helloworld http://services.lab.example.com/php-helloworld
oc get pods -w
oc get service
oc expose svc/php-helloworld
oc get route
curl php-helloworld-s2i.apps.cluster.lab.example.com
displays "Hello , World ! php version is 5.6.25"
(incase doing a code change)
git clone http://services.lab.example.com/php
cd php-helloworld

vi index.php
<?php
print "Hello , World ! php version is ". PHP_VERSION . "\n";
print "A change is gonna come ! \n";
?>

git commit -am "added new line"
git push
oc start-build php-helloworld
oc get pods -w
curl php-helloworld-s2i.apps.cluster.lab.example.com
displays "Hello , World ! php version is 5.6.25
A change is gonna come !"




























